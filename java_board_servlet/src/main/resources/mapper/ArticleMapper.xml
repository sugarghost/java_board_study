<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.board.servlet.yoony.article.ArticleDAO">
  <parameterMap id="articleParameterMap" type="com.board.servlet.yoony.article.ArticleDTO"/>
  <resultMap id="articleResultMap" type="com.board.servlet.yoony.article.ArticleDTO">
    <id property="articleId" column="article_id"/>
    <result property="categoryId" column="category_id"/>
    <result property="categoryName" column="category_name"/>
    <result property="writer" column="writer"/>
    <result property="password" column="password"/>
    <result property="title" column="title"/>
    <result property="content" column="content"/>
    <result property="viewCount" column="view_count"/>
    <result property="isFileExist" column="is_file_exist"/>
    <result property="createdDate" column="created_date"/>
    <result property="modifiedDate" column="modified_date"/>
  </resultMap>
  <insert id="insertArticle" parameterMap="articleParameterMap" useGeneratedKeys="true"
    keyProperty="articleId" keyColumn="article_id">
    INSERT INTO article
      (category_id, writer, password, title, content)
    VALUES (#{categoryId}, #{writer}, #{password}, #{title}, #{content})
  </insert>
  <select id="selectArticleCount" resultType="int" parameterType="Map">
    SELECT COUNT(article_id) FROM article WHERE 1=1
    <if
      test="!@com.board.servlet.yoony.util.ValidationChecker@CheckStringIsNullOrEmpty(searchWord)">
      AND (
      title like CONCAT('%',#{searchWord},'%')
      OR content like CONCAT('%',#{searchWord},'%')
      OR writer like CONCAT('%',#{searchWord},'%')
      )
    </if>
    <if
      test="!@com.board.servlet.yoony.util.ValidationChecker@CheckStringIsNullOrEmpty(categoryId)">
      AND category_id = #{categoryId}
    </if>
    <if test="!@com.board.servlet.yoony.util.ValidationChecker@CheckStringIsNullOrEmpty(startDate) and
    !@com.board.servlet.yoony.util.ValidationChecker@CheckStringIsNullOrEmpty(endDate)">
      AND created_date BETWEEN date(#{startDate}) AND date(#{endDate})+1
    </if>
    ORDER BY article_id DESC
  </select>
  <!-- TODO: (공식홈페이지 참조) Map보다는 Type을 사용하면 런타임에서 DTO를 검사해서 판단이 가능함-->
  <!-- TODO: 쿼리 포멧팅을 좀더 신경쓰기(예시: 컬럼명 3,4개 단위로 줄 바꿈을 하는 등)-->
  <select id="selectArticleList" resultType="com" parameterType="Map">
    SELECT
      article_id, category_id, writer, password, title, content, view_count, created_date, modified_date,
      (SELECT EXISTS(SELECT 1 FROM article_file WHERE article_id = article.article_id)) AS is_file_exist
    FROM article
    WHERE 1=1
    <if
      test="!@com.board.servlet.yoony.util.ValidationChecker@CheckStringIsNullOrEmpty(searchWord)">
      AND (
      title like CONCAT('%',#{searchWord},'%')
      OR content like CONCAT('%',#{searchWord},'%')
      OR writer like CONCAT('%',#{searchWord},'%')
      )
    </if>
    <if
      test="!@com.board.servlet.yoony.util.ValidationChecker@CheckStringIsNullOrEmpty(categoryId)">
      AND category_id = #{categoryId}
    </if>
    <if test="!@com.board.servlet.yoony.util.ValidationChecker@CheckStringIsNullOrEmpty(startDate) and
      !@com.board.servlet.yoony.util.ValidationChecker@CheckStringIsNullOrEmpty(endDate)">
      AND created_date BETWEEN date(#{startDate}) AND date(#{endDate})+1
    </if>
    ORDER BY article_id DESC
    LIMIT #{pageSize} OFFSET #{rowStart}
  </select>
  <select id="selectArticle" resultMap="articleResultMap" parameterType="int">
    SELECT article_id,
           category_id,
           (SELECT name
            FROM category
            WHERE category_id = article.category_id LIMIT 1) AS category_name,
           writer,
           password,
           title,
           content,
           view_count,
           created_date,
           modified_date,
           (SELECT EXISTS(SELECT 1
                          FROM article_file
                          WHERE article_id = article.article_id)) AS is_file_exist
    FROM article
    WHERE article_id = #{articleId}
  </select>
  <select id="selectPasswordCheck" resultType="boolean" parameterMap="articleParameterMap">
    SELECT EXISTS(
             SELECT 1
             FROM article
             WHERE article_id = #{articleId}
               AND password = #{password} LIMIT 1
             ) as success

  </select>
  <update id="updateArticle" parameterMap="articleParameterMap">
    UPDATE article
    SET writer        = #{writer},
        title         = #{title},
        content       = #{content},
        modified_date = current_timestamp()
    WHERE article_id = #{articleId}
      AND password = #{password}
  </update>
  <update id="updateArticleViewCount" parameterType="int">
    UPDATE article
    SET view_count = view_count + 1
    WHERE article_id = #{articleId}
  </update>
  <delete id="deleteArticle" parameterMap="articleParameterMap">
    DELETE
    FROM article
    WHERE article_id = #{articleId}
      AND password = #{password}
  </delete>
</mapper>